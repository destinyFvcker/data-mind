services:
    # Grafana 服务配置
    grafana:
        image: grafana/grafana:latest
        container_name: grafana
        ports:
            - "3000:3000"
        volumes:
            - grafana_data:/var/lib/grafana
        environment:
            - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
            - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
            - GF_USERS_ALLOW_SIGN_UP=false
            - GF_SERVER_DOMAIN=destinyfvcker.cn
            - GF_SERVER_ROOT_URL=https://destinyfvcker.cn/grafana
            - GF_SERVER_SERVE_FROM_SUB_PATH=true
        restart: unless-stopped
        networks:
            - monitoring

    # AKShare 服务配置
    aktools:
        build:
            dockerfile: ./docker/aktools.dockerfile
        ports:
            - "8080:8080"
        networks:
            - monitoring

    # MySQL 服务配置
    mysql:
        image: mysql:latest
        container_name: mysql
        environment:
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        ports:
            - "3306:3306"
        volumes:
            - mysql_data:/var/lib/mysql
        restart: unless-stopped
        networks:
            - monitoring

    clickhouse:
        image: clickhouse/clickhouse-server:25.3.1
        container_name: clickhouse
        ports:
            - "8123:8123" # HTTP接口
            - "9000:9000" # 客户端接口
            - "9009:9009" # 复制端口
        environment:
            - CLICKHOUSE_USER=${CLICKHOUSE_USER}
            - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD}
            - CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT=1 # 启用访问控制
            - CLICKHOUSE_MAX_SERVER_MEMORY_USAGE_RATIO=0.7 # 限制内存使用率为70%
            - CLICKHOUSE_MAX_MEMORY_USAGE=2800000000 # 约2.8GB最大内存使用
        volumes:
            - clickhouse_data:/var/lib/clickhouse
            - type: bind
              read_only: true
              source: ./docker/config-logs.xml
              target: /etc/clickhouse-server/config.d/config-logs.xml
        # ulimits:
        #     nofile:
        #         soft: 32768
        #         hard: 65536
        restart: unless-stopped
        networks:
            - monitoring

    redis:
        image: redis:alpine
        container_name: redis
        ports:
            - "6379:6379"
        command: redis-server --requirepass ${REDIS_PASSWORD}
        volumes:
            - redis_data:/data
        environment:
            - REDIS_PASSWORD=${REDIS_PASSWORD}
        restart: unless-stopped
        networks:
            - monitoring

volumes:
    grafana_data:
    mysql_data:
    clickhouse_data:
    redis_data:

networks:
    monitoring:
        driver: bridge
